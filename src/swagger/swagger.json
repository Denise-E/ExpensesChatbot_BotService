{
  "swagger": "2.0",
  "info": {
    "title": "Expense Tracker API",
    "description": "API for registering and retrieving expenses per Telegram user",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations related to Telegram users"
    },
    {
      "name": "Expenses",
      "description": "Operations related to user expenses"
    }
  ],
  "paths": {
    "/expenses/create": {
      "post": {
        "tags": ["Expenses"],
        "summary": "Create expense",
        "description": "Analyzes the user's message, extracts amount and description, classifies the expense, and stores it.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "telegram_id": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                }
              },
              "required": [
                "telegram_id",
                "text"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expense successfully created",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "amount": {
                  "type": "number"
                },
                "category": {
                  "type": "string"
                },
                "added_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input / Not an expense / Invalid amount / Unable to create expense",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/create": {
      "post": {
        "tags": ["Users"],
        "summary": "Register user",
        "description": "Creates a new Telegram user or ignores the request if the user already exists.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "telegram_id": {
                  "type": "string"
                }
              },
              "required": [
                "telegram_id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "telegram_id": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input / Invalid telegram id / Unable to get user / Unable to create user",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/{telegram_id}/all": {
      "get": {
        "tags": ["Expenses"],
        "summary": "Get user expenses",
        "description": "Returns all expenses recorded by a Telegram user.",
        "parameters": [
          {
            "in": "path",
            "name": "telegram_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of expenses",
            "schema": {
              "type": "object",
              "properties": {
                "expenses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "user_id": {
                        "type": "integer"
                      },
                      "amount": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "category": {
                        "type": "string"
                      },
                      "added_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input / Unable to get expenses",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
